{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sumant%20Bagade/AI-Project-Next/src/utils/geminiResponse.js"],"sourcesContent":["const { GoogleGenerativeAI } = require('@google/generative-ai');\r\n\r\n// Use environment variable for API key\r\nconst GEMINI_API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\r\n\r\n// Initialize Gemini API\r\nconst genAI = new GoogleGenerativeAI(GEMINI_API_KEY);\r\n\r\n// Initialize the model\r\nconst model = genAI.getGenerativeModel({ model: \"gemini-2.0-flash-lite\" });\r\n\r\n/**\r\n * Generates a streaming response using the Gemini AI model\r\n * @param {string} userInput - The input text to generate response for\r\n * @param {function} onChunk - Callback function to handle each chunk of response\r\n * @param {AbortSignal} signal - AbortSignal to cancel the operation\r\n * @returns {Promise<void>}\r\n */\r\nasync function generateGeminiResponse(userInput, onChunk, signal) {\r\n  try {\r\n    if (!userInput) {\r\n      throw new Error('Input is required');\r\n    }\r\n\r\n    const result = await model.generateContent(userInput);\r\n    const response = await result.response;\r\n    console.log(\"GEMINI RESPONSE\", response);\r\n    const text = response.text();\r\n    \r\n    // Simulate streaming by sending one character at a time\r\n    for (let i = 0; i < text.length; i++) {\r\n      // Check if operation was cancelled\r\n      if (signal?.aborted) {\r\n        throw new Error('AbortError');\r\n      }\r\n      \r\n      onChunk(text[i]);\r\n      // Add a small delay to make the streaming visible\r\n      await new Promise((resolve, reject) => {\r\n        const timeoutId = setTimeout(resolve, 20);\r\n        \r\n        // Clean up timeout if operation is cancelled\r\n        signal?.addEventListener('abort', () => {\r\n          clearTimeout(timeoutId);\r\n          reject(new Error('AbortError'));\r\n        });\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error generating response:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport default generateGeminiResponse;"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,kBAAkB,EAAE;AAE5B,uCAAuC;AACvC,MAAM,iBAAiB,QAAQ,GAAG,CAAC,wBAAwB;AAE3D,wBAAwB;AACxB,MAAM,QAAQ,IAAI,mBAAmB;AAErC,uBAAuB;AACvB,MAAM,QAAQ,MAAM,kBAAkB,CAAC;IAAE,OAAO;AAAwB;AAExE;;;;;;CAMC,GACD,eAAe,uBAAuB,SAAS,EAAE,OAAO,EAAE,MAAM;IAC9D,IAAI;QACF,IAAI,CAAC,WAAW;YACd,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;QAC3C,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,MAAM,OAAO,SAAS,IAAI;QAE1B,wDAAwD;QACxD,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;YACpC,mCAAmC;YACnC,IAAI,QAAQ,SAAS;gBACnB,MAAM,IAAI,MAAM;YAClB;YAEA,QAAQ,IAAI,CAAC,EAAE;YACf,kDAAkD;YAClD,MAAM,IAAI,QAAQ,CAAC,SAAS;gBAC1B,MAAM,YAAY,WAAW,SAAS;gBAEtC,6CAA6C;gBAC7C,QAAQ,iBAAiB,SAAS;oBAChC,aAAa;oBACb,OAAO,IAAI,MAAM;gBACnB;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sumant%20Bagade/AI-Project-Next/src/store/appStore.js"],"sourcesContent":["import { create } from 'zustand';\r\n\r\nconst useAppStore = create((set) => ({\r\n  // File state\r\n  file: null,\r\n  setFile: (file) => set({ file }),\r\n  \r\n  // Question and answer state\r\n  question: '',\r\n  setQuestion: (question) => set({ question }),\r\n  answer: { llmResponse: '', documents: '', ids: '' },\r\n  setAnswer: (answer) => set({ answer }),\r\n  // Update appendToAnswer to handle object updates\r\n  appendToAnswer: (chunk) => set((state) => ({ \r\n    answer: typeof chunk === 'string' \r\n      ? { ...state.answer, llmResponse: state.answer.llmResponse + chunk }\r\n      : { ...state.answer, ...chunk }\r\n  })),\r\n  resetAnswer: () => set({ answer: { llmResponse: '', documents: '', ids: '' } }),\r\n  \r\n  // UI state\r\n  loading: false,\r\n  setLoading: (loading) => set({ loading }),\r\n  isListening: false,\r\n  setIsListening: (isListening) => set({ isListening }),\r\n  isStreaming: false,\r\n  setIsStreaming: (isStreaming) => set({ isStreaming }),\r\n  isSpeaking: false,\r\n  setIsSpeaking: (isSpeaking) => set({ isSpeaking }),\r\n  \r\n  // References (not stored in Zustand state but accessible via actions)\r\n  abortController: null,\r\n  setAbortController: (abortController) => set({ abortController }),\r\n  speechSynthesis: null,\r\n  setSpeechSynthesis: (speechSynthesis) => set({ speechSynthesis }),\r\n  \r\n  // Actions\r\n  resetAnswer: () => set({ answer: '' }),\r\n  cancelRequest: () => {\r\n    const { abortController } = useAppStore.getState();\r\n    if (abortController) {\r\n      abortController.abort();\r\n      set({ abortController: null, isStreaming: false });\r\n    }\r\n  },\r\n  stopSpeaking: () => {\r\n    const { speechSynthesis } = useAppStore.getState();\r\n    if (speechSynthesis) {\r\n      speechSynthesis.cancel();\r\n      set({ isSpeaking: false });\r\n    }\r\n  },\r\n  speakText: (text) => {\r\n    const { speechSynthesis } = useAppStore.getState();\r\n    if (speechSynthesis) {\r\n      // Cancel any ongoing speech\r\n      speechSynthesis.cancel();\r\n\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.onend = () => useAppStore.getState().setIsSpeaking(false);\r\n      utterance.onerror = () => useAppStore.getState().setIsSpeaking(false);\r\n      \r\n      set({ isSpeaking: true });\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useAppStore;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAE,CAAC,MAAQ,CAAC;QACnC,aAAa;QACb,MAAM;QACN,SAAS,CAAC,OAAS,IAAI;gBAAE;YAAK;QAE9B,4BAA4B;QAC5B,UAAU;QACV,aAAa,CAAC,WAAa,IAAI;gBAAE;YAAS;QAC1C,QAAQ;YAAE,aAAa;YAAI,WAAW;YAAI,KAAK;QAAG;QAClD,WAAW,CAAC,SAAW,IAAI;gBAAE;YAAO;QACpC,iDAAiD;QACjD,gBAAgB,CAAC,QAAU,IAAI,CAAC,QAAU,CAAC;oBACzC,QAAQ,OAAO,UAAU,WACrB;wBAAE,GAAG,MAAM,MAAM;wBAAE,aAAa,MAAM,MAAM,CAAC,WAAW,GAAG;oBAAM,IACjE;wBAAE,GAAG,MAAM,MAAM;wBAAE,GAAG,KAAK;oBAAC;gBAClC,CAAC;QACD,aAAa,IAAM,IAAI;gBAAE,QAAQ;oBAAE,aAAa;oBAAI,WAAW;oBAAI,KAAK;gBAAG;YAAE;QAE7E,WAAW;QACX,SAAS;QACT,YAAY,CAAC,UAAY,IAAI;gBAAE;YAAQ;QACvC,aAAa;QACb,gBAAgB,CAAC,cAAgB,IAAI;gBAAE;YAAY;QACnD,aAAa;QACb,gBAAgB,CAAC,cAAgB,IAAI;gBAAE;YAAY;QACnD,YAAY;QACZ,eAAe,CAAC,aAAe,IAAI;gBAAE;YAAW;QAEhD,sEAAsE;QACtE,iBAAiB;QACjB,oBAAoB,CAAC,kBAAoB,IAAI;gBAAE;YAAgB;QAC/D,iBAAiB;QACjB,oBAAoB,CAAC,kBAAoB,IAAI;gBAAE;YAAgB;QAE/D,UAAU;QACV,aAAa,IAAM,IAAI;gBAAE,QAAQ;YAAG;QACpC,eAAe;YACb,MAAM,EAAE,eAAe,EAAE,GAAG,YAAY,QAAQ;YAChD,IAAI,iBAAiB;gBACnB,gBAAgB,KAAK;gBACrB,IAAI;oBAAE,iBAAiB;oBAAM,aAAa;gBAAM;YAClD;QACF;QACA,cAAc;YACZ,MAAM,EAAE,eAAe,EAAE,GAAG,YAAY,QAAQ;YAChD,IAAI,iBAAiB;gBACnB,gBAAgB,MAAM;gBACtB,IAAI;oBAAE,YAAY;gBAAM;YAC1B;QACF;QACA,WAAW,CAAC;YACV,MAAM,EAAE,eAAe,EAAE,GAAG,YAAY,QAAQ;YAChD,IAAI,iBAAiB;gBACnB,4BAA4B;gBAC5B,gBAAgB,MAAM;gBAEtB,MAAM,YAAY,IAAI,yBAAyB;gBAC/C,UAAU,KAAK,GAAG,IAAM,YAAY,QAAQ,GAAG,aAAa,CAAC;gBAC7D,UAAU,OAAO,GAAG,IAAM,YAAY,QAAQ,GAAG,aAAa,CAAC;gBAE/D,IAAI;oBAAE,YAAY;gBAAK;gBACvB,gBAAgB,KAAK,CAAC;YACxB;QACF;IACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sumant%20Bagade/AI-Project-Next/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const queryVectorCollection = async (question) => {\r\n  const response = await fetch('http://localhost:8001/api/vector-collection/query', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      prompt: question\r\n    })\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to get response from vector collection');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const convertPDFsToChunks = async (files) => {\r\n  const formData = new FormData();\r\n  files.forEach((file) => {\r\n    formData.append('files', file);\r\n  });\r\n\r\n  const response = await fetch('http://localhost:8001/api/convert-pdfs-chunks', {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to process PDFs');\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const addToVectorCollection = async (chunks, fileName) => {\r\n  const response = await axios.post('http://localhost:8001/api/vector-collection/add', {\r\n    chunks: chunks.map(chunk => ({\r\n      page_content: chunk.page_content,\r\n      metadata: chunk.metadata\r\n    })),\r\n    fileName: fileName\r\n  });\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;AAAA;;AAEO,MAAM,wBAAwB,OAAO;IAC1C,MAAM,WAAW,MAAM,MAAM,qDAAqD;QAChF,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YACnB,QAAQ;QACV;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEO,MAAM,sBAAsB,OAAO;IACxC,MAAM,WAAW,IAAI;IACrB,MAAM,OAAO,CAAC,CAAC;QACb,SAAS,MAAM,CAAC,SAAS;IAC3B;IAEA,MAAM,WAAW,MAAM,MAAM,iDAAiD;QAC5E,QAAQ;QACR,MAAM;IACR;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEO,MAAM,wBAAwB,OAAO,QAAQ;IAClD,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,mDAAmD;QACnF,QAAQ,OAAO,GAAG,CAAC,CAAA,QAAS,CAAC;gBAC3B,cAAc,MAAM,YAAY;gBAChC,UAAU,MAAM,QAAQ;YAC1B,CAAC;QACD,UAAU;IACZ;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Sumant%20Bagade/AI-Project-Next/src/app/page.js"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport generateGeminiResponse from '../utils/geminiResponse';\nimport useAppStore from '../store/appStore';\nimport { AiFillFilePdf } from 'react-icons/ai';\nimport { queryVectorCollection, convertPDFsToChunks, addToVectorCollection } from '../services/api';\n\nexport default function Home() {\n  // Get state and actions from the store\n  const {\n    file, setFile,\n    question, setQuestion,\n    answer, resetAnswer, appendToAnswer, setAnswer,\n    loading, setLoading,\n    isStreaming, setIsStreaming,\n    setAbortController, cancelRequest\n  } = useAppStore();\n  const [error, setError] = React.useState(null);\n  const [uploadedFiles, setUploadedFiles] = React.useState([]);\n  const [showDocuments, setShowDocuments] = React.useState(false);\n  const [showIds, setShowIds] = React.useState(false);\n\n  // Copy all your existing functions here (handleFileUpload, handleDrop, etc.)\n  // ...\n  const handleFileUpload = (e) => {\n    if (e.target.files) {\n      const newFiles = Array.from(e.target.files);\n      console.log(\"FILE UPLOADED\", newFiles);\n      setUploadedFiles(prev => [...prev, ...newFiles]);\n      setFile(newFiles[0]); // Keep the first file as the active file for processing\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const newFile = e.dataTransfer.files[0];\n      setUploadedFiles(prev => [...prev, newFile]);\n      setFile(newFile);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleGeminiSubmit = async (e) => {\n    e.preventDefault();\n    if (!question.trim()) return;\n\n    setLoading(true);\n    resetAnswer();\n    setIsStreaming(true);\n    \n    // Create a new AbortController for this request\n    const controller = new AbortController();\n    setAbortController(controller);\n\n    try {\n      await generateGeminiResponse(\n        question,\n        (chunk) => {\n          if (!controller.signal.aborted) {\n            appendToAnswer(chunk);\n          }\n        },\n        controller.signal\n      );\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Request was cancelled');\n      } else {\n        console.error('Error:', error);\n        appendToAnswer('Error: Failed to get response from AI');\n      }\n    } finally {\n      setLoading(false);\n      setIsStreaming(false);\n      setAbortController(null);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!question.trim()) return;\n  \n    setLoading(true);\n    resetAnswer();\n    \n    try {\n      const result = await queryVectorCollection(question);\n      setAnswer({\n        llmResponse: result.llmResponse || '',\n        documents: result.results.documents[0] || '',\n        ids: result.results.ids[0] || '',\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      appendToAnswer('Error: Failed to get response from vector collection');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const senddFilesForChunking = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await convertPDFsToChunks(uploadedFiles);\n      if (!result.raw_chunks) {\n        throw new Error('No chunks received from PDF processing');\n      }\n      console.log(result)\n      const vectorCollectionResponse = await addToVectorCollection(result.raw_chunks, \"Sumant Name\");\n      console.log('Vector Collection Response:', vectorCollectionResponse);\n    } catch (error) {\n      console.error('Error processing PDFs:', error);\n      setError('Failed to process PDFs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  return (\n<div className=\"flex h-screen bg-gray-100\">\n      {/* Left Panel - File Upload */}\n      <div className=\"w-1/6 min-w-[200px] bg-white border-r border-gray-200 p-4 flex flex-col\">\n        <div className=\"mb-4\">\n          <h3 className=\"text-sm font-medium text-gray-600\">\n            <span className=\"mr-2\">↪</span>\n            Upload PDF files for QnA\n          </h3>\n        </div>\n        \n        <div \n          className=\"border-2 border-dashed border-gray-300 rounded-md p-4 flex flex-col items-center justify-center cursor-pointer mb-4\"\n          onDrop={handleDrop}\n          onDragOver={(e) => e.preventDefault()}\n        >\n          <p className=\"text-sm text-gray-600 mb-1\">Drag and drop file here</p>\n          <p className=\"text-xs text-gray-500 mb-2\">Limit 200MB per file • PDF</p>\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            className=\"hidden\"\n            accept=\".pdf\"\n            onChange={handleFileUpload}\n            multiple\n          />\n          <button \n            onClick={() => document.getElementById('file-upload').click()}\n            className=\"bg-white border border-gray-300 rounded px-3 py-1 text-sm\"\n          >\n            Browse files\n          </button>\n        </div>\n\n        {/* Display uploaded files */}\n        <div className=\"space-y-2 mb-4\">\n          {uploadedFiles.map((file, index) => (\n            <div key={index} className=\"flex items-center p-2 bg-gray-50 rounded\">\n              <div className=\"w-8 h-8 flex-shrink-0 mr-2 flex items-center justify-center\">\n                <AiFillFilePdf className=\"text-red-500 w-6 h-6\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm text-gray-900 truncate\">{file.name}</p>\n                <p className=\"text-xs text-gray-500\">{(file.size / 1024 / 1024).toFixed(2)} MB</p>\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <button \n          className=\"mt-2 bg-gray-100 text-gray-700 border border-gray-300 rounded-md px-4 py-1 text-sm flex items-center\"\n          disabled={!file}\n          onClick={senddFilesForChunking}\n        >\n          <span className=\"mr-2\">⚙️</span>\n          {loading ? 'File Uploading...' : 'Process'}\n        </button>\n      </div>\n\n      {/* Right Panel - Question Answer */}\n      <div className=\"flex-1 flex flex-col h-screen overflow-hidden\">\n        {/* Center the content vertically */}\n        <div className=\"flex-1 flex flex-col justify-center items-center px-8\">\n          <div className=\"w-full max-w-3xl\">\n            <div className=\"flex flex-col items-center mb-8\">\n              <h1 className=\"text-3xl font-semibold text-gray-800 mb-4\">Better PM</h1>\n              <div className=\"w-full relative\">\n                <input\n                  type=\"text\"\n                  value={question}\n                  onChange={(e) => setQuestion(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' && !loading && question.trim()) {\n                      e.preventDefault();\n                      handleSubmit(e);\n                    }\n                  }}\n                  className=\"w-full border border-gray-300 rounded-full py-4 px-6 pr-32 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\"\n                  placeholder=\"Ask anything\"\n                  disabled={loading}\n                />\n                <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-2\">\n                  {isStreaming && (\n                    <button\n                      type=\"button\"\n                      onClick={cancelRequest}\n                      className=\"p-2 hover:bg-gray-100 rounded-full\"\n                      title=\"Stop\"\n                    >\n                      <span className=\"text-red-500\">⏹</span>\n                    </button>\n                  )}\n                  <button \n                    onClick={handleSubmit}\n                    disabled={loading || !question.trim()}\n                    className=\"bg-black text-white rounded-full p-3 px-6 text-sm font-medium hover:bg-gray-800 disabled:bg-gray-300 disabled:cursor-not-allowed flex items-center gap-2\"\n                   >\n                    {loading ? 'Processing...' : 'Ask'}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Answer section */}\n            {answer?.llmResponse && (\n              <div className=\"bg-white rounded-lg shadow p-4 mt-8\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h2 className=\"text-lg font-medium\">Answer:</h2>\n                  <div className=\"flex gap-2\">\n                    <button \n                      onClick={() => setShowDocuments(!showDocuments)}\n                      className=\"p-1 hover:bg-gray-100 rounded\"\n                      title=\"Show Documents\"\n                    >\n                      📄\n                    </button>\n                    <button \n                      onClick={() => setShowIds(!showIds)}\n                      className=\"p-1 hover:bg-gray-100 rounded\"\n                      title=\"Show IDs\"\n                    >\n                      🔍\n                    </button>\n                  </div>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"text-gray-700 prose prose-lg max-w-none prose-p:text-lg prose-headings:text-xl prose-strong:text-lg\">\n                    <ReactMarkdown>{answer.llmResponse}</ReactMarkdown>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Right Sidebars */}\n      {showDocuments && (\n        <div className=\"fixed right-0 top-0 h-screen w-96 bg-white shadow-lg p-4 overflow-y-auto transition-transform transform\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-medium\">Documents</h3>\n            <button \n              onClick={() => setShowDocuments(false)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"prose prose-sm max-w-none\">\n            {Array.isArray(answer?.documents) ? (\n              <ul className=\"list-disc pl-5\">\n                {answer.documents.map((doc, index) => (\n                  <li key={index} className=\"text-gray-700\">\n                    <ReactMarkdown>{doc}</ReactMarkdown>\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <ReactMarkdown className=\"text-gray-700 whitespace-pre-wrap\">\n                {answer?.documents || ''}\n              </ReactMarkdown>\n            )}\n          </div>\n        </div>\n      )}\n\n      {showIds && (\n        <div className=\"fixed right-0 top-0 h-screen w-96 bg-white shadow-lg p-4 overflow-y-auto transition-transform transform\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-medium\">IDs</h3>\n            <button \n              onClick={() => setShowIds(false)}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              ✕\n            </button>\n          </div>\n          {Array.isArray(answer?.ids) ? (\n            <ul className=\"list-disc pl-5\">\n              {answer.ids.map((id, index) => (\n                <li key={index} className=\"text-gray-700\">{id}</li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-gray-700 whitespace-pre-wrap\">{answer?.ids}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}